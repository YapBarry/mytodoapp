[{"/Users/user/Desktop/my_todo_list/src/index.js":"1","/Users/user/Desktop/my_todo_list/src/App.js":"2","/Users/user/Desktop/my_todo_list/src/firebase.js":"3"},{"size":254,"mtime":1666686989201,"results":"4","hashOfConfig":"5"},{"size":2217,"mtime":1666766632604,"results":"6","hashOfConfig":"5"},{"size":610,"mtime":1666746069842,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14m3qji",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/user/Desktop/my_todo_list/src/index.js",[],[],"/Users/user/Desktop/my_todo_list/src/App.js",["18"],[],"import {useState} from 'react';\n\n// for firebase functionality/ saving functionality\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\n// is there e prevent default in here? ########## TODO\n// Add use effect here ########## TODO\n\n\nexport function App() {\n  const [list, setList] =useState([]);\n  const [input, setInput] = useState(\"\"); //title\n\n  // supposedly handle to do\n  // https://www.koderhq.com/tutorial/vue/firestore-database/\n  // addDoc(collectionReference, dataObject)\n  // collection(firestoreInstance, 'collectionName')\n  const addToDo = async (toDo) => {\n    // title is input // input is input\n    // input is e.target.value\n    if (input !== \"\") {\n      const newToDo = {\n        id: Math.random(),\n        toDo: toDo,\n        completed: false\n      };\n      if (input !== \"\") {\n        // add todo to database (for database method)\n        const collectionRef = collection(db, 'todo');\n        await addDoc(collectionRef, newToDo);\n\n        // // add the todo to existing list (for non database method)\n        // setList([...list, newToDo]);\n\n        // clear input box\n        setInput(\"\");\n\n      }\n\n\n    }\n  };\n\n  const deleteToDo = (id) => {\n    const newList = list.filter(toDo => toDo.id !== id);\n    setList(newList);\n  }\n\n  // to apply strikethrough formatting to toDo if completed = true\n  const handleToggle = (id) => {\n    let mapped = list.map(toDo => toDo.id == id ? { ...toDo, completed: !toDo.completed } : { ...toDo});\n    setList(mapped);\n    console.log(mapped);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <input \n      type=\"text\"\n      onChange={(e) => setInput(e.target.value)}\n      value={input}\n      ></input>\n      <button onClick={() => addToDo(input)}>Add To Do</button>\n      <ul>\n        {list.map((toDo) => (\n          <div key={toDo.id} className={toDo.completed ? \"strike\" : \"\"}>\n            <input value={toDo.toDo} type=\"checkbox\" onClick={() => handleToggle(toDo.id)}/>\n            <span>{toDo.toDo}</span>\n            <button onClick={() => deleteToDo(toDo.id)}>&times;</button>  \n            <hr></hr>     \n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/user/Desktop/my_todo_list/src/firebase.js",[],[],{"ruleId":"19","severity":1,"message":"20","line":52,"column":43,"nodeType":"21","messageId":"22","endLine":52,"endColumn":45},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]
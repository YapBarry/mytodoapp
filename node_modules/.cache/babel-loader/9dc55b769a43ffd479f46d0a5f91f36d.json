{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/my_todo_list/src/Checkbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Checkbox() {\n  _s();\n  const [todoList, setTodoList] = useState([{\n    toDo: 'inputtttt'\n  }, {\n    toDo: 'inputtttt2'\n  }]); // remove hehe and add a \"addtodo\" function that assigns index to its cb too\n  const [cbState, setCbState] = useState([false, false]); // add spread operator\n\n  const handleOnChange = position => {\n    const updatedCheckedState = cbState.map((cb, index) => index === position ? !cb : cb);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todoList.map((element, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: cbState[index],\n          onChange: () => handleOnChange(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Checkbox, \"MaBpl0f/EegwphiRTnTYkpHF4RI=\");\n_c = Checkbox;\n;\nexport default Checkbox;\nvar _c;\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","useState","Checkbox","todoList","setTodoList","toDo","cbState","setCbState","handleOnChange","position","updatedCheckedState","map","cb","index","element"],"sources":["/Users/user/Desktop/my_todo_list/src/Checkbox.js"],"sourcesContent":["import React, {useState} from 'react';\n\nexport function Checkbox() {\n    const [todoList, setTodoList] = useState([{toDo: 'inputtttt'}, {toDo: 'inputtttt2'}]); // remove hehe and add a \"addtodo\" function that assigns index to its cb too\n    const [cbState, setCbState] = useState([false, false]); // add spread operator\n    \n    const handleOnChange = (position) => {\n        const updatedCheckedState = cbState.map((cb, index) =>\n          index === position ? !cb : cb\n        );\n    }\n    return (\n        <div>\n            <ul>\n                {todoList.map((element, index) => (                 \n                    <div>\n                        <input\n                        key={index}\n                        type=\"checkbox\"\n                        checked={cbState[index]}\n                        onChange={() => handleOnChange(index)}\n                        />\n                        <span>{element}</span>\n                    </div>\n                ))\n                }\n            </ul>\n        </div>\n    )\n};\n\nexport default Checkbox;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC;AAEtC,OAAO,SAASC,QAAQ,GAAG;EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAACI,IAAI,EAAE;EAAW,CAAC,EAAE;IAACA,IAAI,EAAE;EAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EACvF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;;EAExD,MAAMO,cAAc,GAAIC,QAAQ,IAAK;IACjC,MAAMC,mBAAmB,GAAGJ,OAAO,CAACK,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAChDA,KAAK,KAAKJ,QAAQ,GAAG,CAACG,EAAE,GAAGA,EAAE,CAC9B;EACL,CAAC;EACD,oBACI;IAAA,uBACI;MAAA,UACKT,QAAQ,CAACQ,GAAG,CAAC,CAACG,OAAO,EAAED,KAAK,kBACzB;QAAA,wBACI;UAEA,IAAI,EAAC,UAAU;UACf,OAAO,EAAEP,OAAO,CAACO,KAAK,CAAE;UACxB,QAAQ,EAAE,MAAML,cAAc,CAACK,KAAK;QAAE,GAHjCA,KAAK;UAAA;UAAA;UAAA;QAAA,QAIR,eACF;UAAA,UAAOC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAE7B;IAAC;MAAA;MAAA;MAAA;IAAA;EAED;IAAA;IAAA;IAAA;EAAA,QACH;AAEd;AAAC,GA3BeZ,QAAQ;AAAA,KAARA,QAAQ;AA2BvB;AAED,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
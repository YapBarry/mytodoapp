{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/my_todo_list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Checkbox from './Checkbox';\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cbState, setCbState] = useState([]);\n  useEffect(() => {\n    const collectionRef = collection(db, 'todo');\n    const q = query(collectionRef); //where clause if necessary\n    const unsub = onSnapshot(q, querySnapshot => {\n      let todoArray = [];\n      let cbArray = [];\n      querySnapshot.forEach(doc => {\n        todoArray.push({\n          ...doc.data(),\n          id: doc.id\n        });\n        console.log(doc.data().completed);\n        cbArray.push([...doc.data().completed]);\n        console.log(todoArray);\n        console.log(cbArray);\n        // update here by creating an array and pushing to it during query snapshot\n        // and then setting it to setCb in the next line\n      });\n\n      setList(todoArray);\n      setCbState(cbArray);\n    });\n    return () => unsub();\n  }, []);\n  const addToDo = async e => {\n    e.preventDefault();\n    if (input !== \"\") {\n      const newToDo = {\n        toDo: input,\n        completed: false\n      };\n      await addDoc(collection(db, 'todo'), newToDo);\n\n      // // add the todo to existing list (for non database method)\n      // setList([...list, newToDo]);\n\n      // clear input box\n      setInput(\"\");\n    }\n  };\n  const handleEdit = async (todo, list) => {\n    await updateDoc(doc(db, 'todo', todo.id), {\n      toDo: list\n    });\n  };\n  const toggleComplete = async todo => {\n    await updateDoc(doc(db, 'todo', todo.id), {\n      completed: !todo.completed\n    });\n  };\n  const handleDelete = async id => {\n    await deleteDoc(doc(db, 'todo', id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addToDo(input),\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInput(e.target.value),\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map(toDo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: toDo.completed ? \"strike\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: toDo.toDo,\n          type: \"checkbox\",\n          onClick: () => toggleComplete(toDo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: toDo.toDo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(toDo.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, toDo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O31ICgfwMhGsT65evfp5YlxFzXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Checkbox","db","collection","addDoc","query","onSnapshot","doc","updateDoc","deleteDoc","where","App","list","setList","input","setInput","cbState","setCbState","collectionRef","q","unsub","querySnapshot","todoArray","cbArray","forEach","push","data","id","console","log","completed","addToDo","e","preventDefault","newToDo","toDo","handleEdit","todo","toggleComplete","handleDelete","target","value","map"],"sources":["/Users/user/Desktop/my_todo_list/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport Checkbox from './Checkbox';\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nimport { query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\n\nexport function App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cbState, setCbState] = useState([]);\n  \n  \n  useEffect(() => {\n    const collectionRef = collection(db, 'todo');\n    const q = query(collectionRef); //where clause if necessary\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      let todoArray = [];\n      let cbArray = [];\n      querySnapshot.forEach((doc) => {\n        todoArray.push({...doc.data(), id: doc.id});\n        console.log(doc.data().completed);\n        cbArray.push([...doc.data().completed]);\n        console.log(todoArray); \n        console.log(cbArray);\n        // update here by creating an array and pushing to it during query snapshot\n        // and then setting it to setCb in the next line\n      });\n      setList(todoArray);\n      setCbState(cbArray);\n    });\n    return () => unsub();\n  }, []);\n\n  const addToDo = async (e) => {\n    e.preventDefault();\n    if (input !== \"\") {\n      const newToDo = {\n        toDo: input,\n        completed: false\n      };\n\n      await addDoc(collection(db, 'todo'), newToDo);\n\n      // // add the todo to existing list (for non database method)\n      // setList([...list, newToDo]);\n\n      // clear input box\n      setInput(\"\");\n    }\n  };\n\n  const handleEdit = async (todo, list) => { \n    await updateDoc(doc(db, 'todo', todo.id), {toDo: list});\n  };\n  const toggleComplete = async (todo) => {\n    await updateDoc(doc(db, 'todo', todo.id), { \n      completed: !todo.completed\n    });\n  };\n  const handleDelete = async (id) => {\n    await deleteDoc(doc(db, 'todo', id));\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={addToDo(input)}>\n        <h1>To Do List</h1>\n        <input \n        type=\"text\"\n        onChange={(e) => setInput(e.target.value)}\n        value={input}\n        ></input>\n        <button type=\"submit\">Add To Do</button>\n      </form>\n      <ul>\n        {list.map((toDo) => (\n          <div key={toDo.id} className={toDo.completed ? \"strike\" : \"\"}>\n            <input \n            value={toDo.toDo} \n            type=\"checkbox\" \n            onClick={() => toggleComplete(toDo)}/>\n            <span>{toDo.toDo}</span>\n            <button onClick={() => handleDelete(toDo.id)}>&times;</button>  \n            <hr></hr>     \n          </div>\n        ))}\n      </ul>\n      <Checkbox/>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,EAAE,QAAQ,YAAY;AAC/B,SAASC,UAAU,EAAEC,MAAM,QAAQ,oBAAoB;AAEvD,SAASC,KAAK,EAAEC,UAAU,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,QAAQ,oBAAoB;AAAC;AAEzF,OAAO,SAASC,GAAG,GAAG;EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAG1CC,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAGf,UAAU,CAACD,EAAE,EAAE,MAAM,CAAC;IAC5C,MAAMiB,CAAC,GAAGd,KAAK,CAACa,aAAa,CAAC,CAAC,CAAC;IAChC,MAAME,KAAK,GAAGd,UAAU,CAACa,CAAC,EAAGE,aAAa,IAAK;MAC7C,IAAIC,SAAS,GAAG,EAAE;MAClB,IAAIC,OAAO,GAAG,EAAE;MAChBF,aAAa,CAACG,OAAO,CAAEjB,GAAG,IAAK;QAC7Be,SAAS,CAACG,IAAI,CAAC;UAAC,GAAGlB,GAAG,CAACmB,IAAI,EAAE;UAAEC,EAAE,EAAEpB,GAAG,CAACoB;QAAE,CAAC,CAAC;QAC3CC,OAAO,CAACC,GAAG,CAACtB,GAAG,CAACmB,IAAI,EAAE,CAACI,SAAS,CAAC;QACjCP,OAAO,CAACE,IAAI,CAAC,CAAC,GAAGlB,GAAG,CAACmB,IAAI,EAAE,CAACI,SAAS,CAAC,CAAC;QACvCF,OAAO,CAACC,GAAG,CAACP,SAAS,CAAC;QACtBM,OAAO,CAACC,GAAG,CAACN,OAAO,CAAC;QACpB;QACA;MACF,CAAC,CAAC;;MACFV,OAAO,CAACS,SAAS,CAAC;MAClBL,UAAU,CAACM,OAAO,CAAC;IACrB,CAAC,CAAC;IACF,OAAO,MAAMH,KAAK,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,OAAO,GAAG,MAAOC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAInB,KAAK,KAAK,EAAE,EAAE;MAChB,MAAMoB,OAAO,GAAG;QACdC,IAAI,EAAErB,KAAK;QACXgB,SAAS,EAAE;MACb,CAAC;MAED,MAAM1B,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,MAAM,CAAC,EAAEgC,OAAO,CAAC;;MAE7C;MACA;;MAEA;MACAnB,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,MAAMqB,UAAU,GAAG,OAAOC,IAAI,EAAEzB,IAAI,KAAK;IACvC,MAAMJ,SAAS,CAACD,GAAG,CAACL,EAAE,EAAE,MAAM,EAAEmC,IAAI,CAACV,EAAE,CAAC,EAAE;MAACQ,IAAI,EAAEvB;IAAI,CAAC,CAAC;EACzD,CAAC;EACD,MAAM0B,cAAc,GAAG,MAAOD,IAAI,IAAK;IACrC,MAAM7B,SAAS,CAACD,GAAG,CAACL,EAAE,EAAE,MAAM,EAAEmC,IAAI,CAACV,EAAE,CAAC,EAAE;MACxCG,SAAS,EAAE,CAACO,IAAI,CAACP;IACnB,CAAC,CAAC;EACJ,CAAC;EACD,MAAMS,YAAY,GAAG,MAAOZ,EAAE,IAAK;IACjC,MAAMlB,SAAS,CAACF,GAAG,CAACL,EAAE,EAAE,MAAM,EAAEyB,EAAE,CAAC,CAAC;EACtC,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAM,QAAQ,EAAEI,OAAO,CAACjB,KAAK,CAAE;MAAA,wBAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB,eACnB;QACA,IAAI,EAAC,MAAM;QACX,QAAQ,EAAGkB,CAAC,IAAKjB,QAAQ,CAACiB,CAAC,CAACQ,MAAM,CAACC,KAAK,CAAE;QAC1C,KAAK,EAAE3B;MAAM;QAAA;QAAA;QAAA;MAAA,QACJ,eACT;QAAQ,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAmB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnC,eACP;MAAA,UACGF,IAAI,CAAC8B,GAAG,CAAEP,IAAI,iBACb;QAAmB,SAAS,EAAEA,IAAI,CAACL,SAAS,GAAG,QAAQ,GAAG,EAAG;QAAA,wBAC3D;UACA,KAAK,EAAEK,IAAI,CAACA,IAAK;UACjB,IAAI,EAAC,UAAU;UACf,OAAO,EAAE,MAAMG,cAAc,CAACH,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA,QAAE,eACtC;UAAA,UAAOA,IAAI,CAACA;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eACxB;UAAQ,OAAO,EAAE,MAAMI,YAAY,CAACJ,IAAI,CAACR,EAAE,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAiB,eAC9D;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA,GAPDQ,IAAI,CAACR,EAAE;QAAA;QAAA;QAAA;MAAA,QASlB;IAAC;MAAA;MAAA;MAAA;IAAA,QACC,eACL,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAEP;AAEV;AAAC,GArFehB,GAAG;AAAA,KAAHA,GAAG;AAuFnB,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}
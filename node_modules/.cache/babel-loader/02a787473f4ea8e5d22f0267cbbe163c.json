{"ast":null,"code":"import _regeneratorRuntime from\"/Users/user/Desktop/my_todo_list/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/user/Desktop/my_todo_list/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/user/Desktop/my_todo_list/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/user/Desktop/my_todo_list/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from'react';import{db}from\"./firebase\";import{collection,addDoc}from\"firebase/firestore\";import{query,onSnapshot,doc,updateDoc,deleteDoc,where}from\"firebase/firestore\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),list=_useState2[0],setList=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var collectionRef=collection(db,'todo');useEffect(function(){var q=query(collectionRef);//where clause if necessary\nvar unsub=onSnapshot(q,function(querySnapshot){var todoArray=[];querySnapshot.forEach(function(doc){todoArray.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id}));});setList(todoArray);});return function(){return unsub();};},[]);var addToDo=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(toDo){var newToDo;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(input!==\"\")){_context.next=5;break;}newToDo={toDo:toDo,completed:false};_context.next=4;return addDoc(collectionRef,newToDo);case 4:// // add the todo to existing list (for non database method)\n// setList([...list, newToDo]);\n// clear input box\nsetInput(\"\");case 5:case\"end\":return _context.stop();}}},_callee);}));return function addToDo(_x){return _ref.apply(this,arguments);};}();// const deleteToDo = (id) => {\n//   const newList = list.filter(toDo => toDo.id !== id);\n//   setList(newList);\n// }\n// // to apply strikethrough formatting to toDo if completed = true\n// const handleToggle = (id) => {\n//   let mapped = list.map(toDo => toDo.id == id ? { ...toDo, completed: !toDo.completed } : { ...toDo});\n//   setList(mapped);\n//   console.log(mapped);\n// };\nvar handleEdit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(todo,list){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return updateDoc(doc(db,'todo',todo.id),{toDo:list});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function handleEdit(_x2,_x3){return _ref2.apply(this,arguments);};}();var toggleComplete=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(todo){return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return updateDoc(doc(db,'todo',todo.id),{completed:!todo.completed});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function toggleComplete(_x4){return _ref3.apply(this,arguments);};}();var handleDelete=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(id){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return deleteDoc(doc(db,'todo',id));case 2:case\"end\":return _context4.stop();}}},_callee4);}));return function handleDelete(_x5){return _ref4.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"To Do List\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onChange:function onChange(e){return setInput(e.target.value);},value:input}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return addToDo(input);},children:\"Add To Do\"}),/*#__PURE__*/_jsx(\"ul\",{children:list.map(function(toDo){return/*#__PURE__*/_jsxs(\"div\",{className:toDo.completed?\"strike\":\"\",children:[/*#__PURE__*/_jsx(\"input\",{value:toDo.toDo,type:\"checkbox\",onClick:function onClick(){return toggleComplete(toDo.id);}}),/*#__PURE__*/_jsx(\"span\",{children:toDo.toDo}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDelete(toDo.id);},children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"hr\",{})]},toDo.id);})})]});}export default App;","map":{"version":3,"names":["useState","useEffect","db","collection","addDoc","query","onSnapshot","doc","updateDoc","deleteDoc","where","App","list","setList","input","setInput","collectionRef","q","unsub","querySnapshot","todoArray","forEach","push","data","id","addToDo","toDo","newToDo","completed","handleEdit","todo","toggleComplete","handleDelete","e","target","value","map"],"sources":["/Users/user/Desktop/my_todo_list/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nimport { query, onSnapshot, doc, updateDoc, deleteDoc, where } from \"firebase/firestore\";\n\nexport function App() {\n  const [list, setList] =useState([]);\n  const [input, setInput] = useState(\"\");\n  const collectionRef = collection(db, 'todo');\n  \n  useEffect(() => {\n    \n    const q = query(collectionRef); //where clause if necessary\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      let todoArray = [];\n      querySnapshot.forEach((doc) => {\n        todoArray.push({...doc.data(), id: doc.id});\n      });\n      setList(todoArray);\n    })\n    return () => unsub();\n  }, []);\n\n  const addToDo = async (toDo) => {\n    if (input !== \"\") {\n      const newToDo = {\n        toDo: toDo,\n        completed: false\n      };\n\n      await addDoc(collectionRef, newToDo);\n\n      // // add the todo to existing list (for non database method)\n      // setList([...list, newToDo]);\n\n      // clear input box\n      setInput(\"\");\n    }\n  };\n\n  // const deleteToDo = (id) => {\n  //   const newList = list.filter(toDo => toDo.id !== id);\n  //   setList(newList);\n  // }\n\n  // // to apply strikethrough formatting to toDo if completed = true\n  // const handleToggle = (id) => {\n  //   let mapped = list.map(toDo => toDo.id == id ? { ...toDo, completed: !toDo.completed } : { ...toDo});\n  //   setList(mapped);\n  //   console.log(mapped);\n  // };\n\n  const handleEdit = async (todo, list) => { \n    await updateDoc(doc(db, 'todo', todo.id), {toDo: list});\n  };\n  const toggleComplete = async (todo) => {\n    await updateDoc(doc(db, 'todo', todo.id), { \n      completed: !todo.completed\n    });\n  };\n  const handleDelete = async (id) => {\n    await deleteDoc(doc(db, 'todo', id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>To Do List</h1>\n      <input \n      type=\"text\"\n      onChange={(e) => setInput(e.target.value)}\n      value={input}\n      ></input>\n      <button onClick={() => addToDo(input)}>Add To Do</button>\n      <ul>\n        {list.map((toDo) => (\n          <div key={toDo.id} className={toDo.completed ? \"strike\" : \"\"}>\n            <input \n            value={toDo.toDo} \n            type=\"checkbox\" \n            onClick={() => toggleComplete(toDo.id)}/>\n            <span>{toDo.toDo}</span>\n            <button onClick={() => handleDelete(toDo.id)}>&times;</button>  \n            <hr></hr>     \n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/my_todo_list/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Checkbox from './Checkbox';\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { query, onSnapshot, doc, updateDoc, deleteDoc, orderBy, serverTimestamp, getDoc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cbState, setCbState] = useState([]);\n  useEffect(() => {\n    const collectionRef = collection(db, 'todo');\n    const q = query(collectionRef, orderBy('createdAt'));\n    const unsub = onSnapshot(q, querySnapshot => {\n      let todoArray = [];\n      let cbArray = [];\n      querySnapshot.forEach(doc => {\n        todoArray.push({\n          ...doc.data(),\n          id: doc.id\n        });\n        cbArray.push(doc.data().completed);\n      });\n      setList(todoArray);\n      setCbState(cbArray);\n    });\n    return () => unsub();\n  }, []);\n  const addToDo = async e => {\n    e.preventDefault();\n    if (input !== \"\") {\n      const newToDo = {\n        toDo: input,\n        completed: false,\n        createdAt: serverTimestamp()\n      };\n      await addDoc(collection(db, 'todo'), newToDo);\n\n      // // add the todo to existing list (for non database method)\n      // setList([...list, newToDo]);\n\n      // clear input box\n      setInput(\"\");\n    }\n  };\n  const handleEdit = async todo => {\n    const changeToMsg = await getDoc(doc(db, \"todo\", todo.id));\n    await updateDoc(doc(db, 'todo', todo.id), {\n      toDo: list.toDo\n    });\n  };\n  const toggleComplete = async todo => {\n    await updateDoc(doc(db, 'todo', todo.id), {\n      completed: !todo.completed\n    });\n  };\n  const handleDelete = async id => {\n    await deleteDoc(doc(db, 'todo', id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addToDo,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInput(e.target.value),\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add To Do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((toDo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: toDo.completed ? \"strike\" : \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: toDo.toDo,\n          type: \"checkbox\",\n          checked: cbState[index],\n          onChange: () => toggleComplete(toDo)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          children: toDo.toDo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(toDo),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(toDo.id),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, toDo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"O31ICgfwMhGsT65evfp5YlxFzXw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Checkbox","db","collection","addDoc","query","onSnapshot","doc","updateDoc","deleteDoc","orderBy","serverTimestamp","getDoc","App","list","setList","input","setInput","cbState","setCbState","collectionRef","q","unsub","querySnapshot","todoArray","cbArray","forEach","push","data","id","completed","addToDo","e","preventDefault","newToDo","toDo","createdAt","handleEdit","todo","changeToMsg","toggleComplete","handleDelete","target","value","map","index"],"sources":["/Users/user/Desktop/my_todo_list/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport Checkbox from './Checkbox';\nimport { db } from \"./firebase\";\nimport { collection, addDoc } from \"firebase/firestore\";\n\nimport { query, onSnapshot, doc, updateDoc, deleteDoc, orderBy, serverTimestamp, getDoc} from \"firebase/firestore\";\n\nexport function App() {\n  const [list, setList] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [cbState, setCbState] = useState([]);\n  \n  \n  useEffect(() => {\n    const collectionRef = collection(db, 'todo');\n    const q = query(collectionRef, orderBy('createdAt'));\n    const unsub = onSnapshot(q, (querySnapshot) => {\n      let todoArray = [];\n      let cbArray = [];\n      querySnapshot.forEach((doc) => {\n        todoArray.push({...doc.data(), id: doc.id});\n        cbArray.push(doc.data().completed);\n      });\n      setList(todoArray);\n      setCbState(cbArray);\n    });\n    return () => unsub();\n  }, []);\n\n  const addToDo = async (e) => {\n    e.preventDefault();\n    if (input !== \"\") {\n      const newToDo = {\n        toDo: input,\n        completed: false,\n        createdAt: serverTimestamp()\n      };\n\n      await addDoc(collection(db, 'todo'), newToDo);\n\n      // // add the todo to existing list (for non database method)\n      // setList([...list, newToDo]);\n\n      // clear input box\n      setInput(\"\");\n    }\n  };\n\n  const handleEdit = async (todo) => { \n    const changeToMsg = await getDoc(doc(db, \"todo\", todo.id));\n    await updateDoc(doc(db, 'todo', todo.id), {toDo: list.toDo});\n  };\n  const toggleComplete = async (todo) => {\n    await updateDoc(doc(db, 'todo', todo.id), { \n      completed: !todo.completed\n    });\n  };\n  const handleDelete = async (id) => {\n    await deleteDoc(doc(db, 'todo', id));\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={addToDo}>\n        <h1>To Do List</h1>\n        <input \n        type=\"text\"\n        onChange={(e) => setInput(e.target.value)}\n        value={input}\n        ></input>\n        <button type=\"submit\">Add To Do</button>\n      </form>\n      <ul>\n        {list.map((toDo,index) => (\n          <div key={toDo.id} className={toDo.completed ? \"strike\" : \"\"}>\n            <input \n            value={toDo.toDo} \n            type=\"checkbox\" \n            checked={cbState[index]}\n            onChange={() => toggleComplete(toDo)}/>\n            <input type=\"text\">{toDo.toDo}</input>\n            <button onClick={() => handleEdit(toDo)}>Edit</button>\n            <button onClick={() => handleDelete(toDo.id)}>&times;</button>  \n            <hr></hr>     \n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
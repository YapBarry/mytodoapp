{"ast":null,"code":"import _slicedToArray from\"/Users/user/Desktop/my_todo_list/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Checkbox(){var _useState=useState([{toDo:'inputtttt'},{toDo:'inputtttt2'},{toDo:'inputtttt3'}]),_useState2=_slicedToArray(_useState,2),todoList=_useState2[0],setTodoList=_useState2[1];// remove hehe and add a \"addtodo\" function that assigns index to its cb too\nvar _useState3=useState([true,false,true]),_useState4=_slicedToArray(_useState3,2),cbState=_useState4[0],setCbState=_useState4[1];// add spread operator\nvar handleOnChange=function handleOnChange(position){var updatedCheckedState=cbState.map(function(cb,index){return index===position?!cb:cb;});console.log(cbState);};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{children:todoList.map(function(element,index){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:cbState[index],onChange:function onChange(){return handleOnChange(index);}},\"cb\".concat(index)),/*#__PURE__*/_jsx(\"span\",{children:element.toDo}),/*#__PURE__*/_jsx(\"span\",{children:cbState})]},index);})})});};export default Checkbox;","map":{"version":3,"names":["React","useState","Checkbox","toDo","todoList","setTodoList","cbState","setCbState","handleOnChange","position","updatedCheckedState","map","cb","index","console","log","element"],"sources":["/Users/user/Desktop/my_todo_list/src/Checkbox.js"],"sourcesContent":["import React, {useState} from 'react';\n\nexport function Checkbox() {\n    const [todoList, setTodoList] = useState([{toDo: 'inputtttt'}, {toDo: 'inputtttt2'}, {toDo: 'inputtttt3'}]); // remove hehe and add a \"addtodo\" function that assigns index to its cb too\n    const [cbState, setCbState] = useState([true, false,true]); // add spread operator\n    \n    const handleOnChange = (position) => {\n        const updatedCheckedState = cbState.map((cb, index) =>\n          index === position ? !cb : cb\n        );\n        console.log(cbState)\n    }\n    return (\n        <div>\n            <ul>\n                {todoList.map((element, index) => (                 \n                    <div key={index}>\n                        <input\n                        key={`cb${index}`}\n                        type=\"checkbox\"\n                        checked={cbState[index]}\n                        onChange={() => handleOnChange(index)}\n                        />\n                        <span>{element.toDo}</span>\n                        <span>{cbState}</span>\n                    </div>\n                ))\n                }\n            </ul>\n        </div>\n    )\n};\n\nexport default Checkbox;"],"mappings":"sHAAA,MAAOA,MAAK,EAAGC,QAAQ,KAAO,OAAO,CAAC,wFAEtC,MAAO,SAASC,SAAQ,EAAG,CACvB,cAAgCD,QAAQ,CAAC,CAAC,CAACE,IAAI,CAAE,WAAW,CAAC,CAAE,CAACA,IAAI,CAAE,YAAY,CAAC,CAAE,CAACA,IAAI,CAAE,YAAY,CAAC,CAAC,CAAC,wCAApGC,QAAQ,eAAEC,WAAW,eAAiF;AAC7G,eAA8BJ,QAAQ,CAAC,CAAC,IAAI,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,yCAAnDK,OAAO,eAAEC,UAAU,eAAkC;AAE5D,GAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,QAAQ,CAAK,CACjC,GAAMC,oBAAmB,CAAGJ,OAAO,CAACK,GAAG,CAAC,SAACC,EAAE,CAAEC,KAAK,QAChDA,MAAK,GAAKJ,QAAQ,CAAG,CAACG,EAAE,CAAGA,EAAE,GAC9B,CACDE,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC,CACxB,CAAC,CACD,mBACI,kCACI,oBACKF,QAAQ,CAACO,GAAG,CAAC,SAACK,OAAO,CAAEH,KAAK,qBACzB,oCACI,cAEA,IAAI,CAAC,UAAU,CACf,OAAO,CAAEP,OAAO,CAACO,KAAK,CAAE,CACxB,QAAQ,CAAE,0BAAML,eAAc,CAACK,KAAK,CAAC,EAAC,cAH5BA,KAAK,EAIb,cACF,sBAAOG,OAAO,CAACb,IAAI,EAAQ,cAC3B,sBAAOG,OAAO,EAAQ,GARhBO,KAAK,CAST,EACT,CAAC,EAED,EACH,CAEd,CAAC,CAED,cAAeX,SAAQ"},"metadata":{},"sourceType":"module"}